// source: FMS.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.com.distributedFMS.AlarmMessage', null, global);
goog.exportSymbol('proto.com.distributedFMS.QueryAlarmsRequest', null, global);
goog.exportSymbol('proto.com.distributedFMS.SubmitEventRequest', null, global);
goog.exportSymbol('proto.com.distributedFMS.SubmitEventResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.distributedFMS.SubmitEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.distributedFMS.SubmitEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.distributedFMS.SubmitEventRequest.displayName = 'proto.com.distributedFMS.SubmitEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.distributedFMS.SubmitEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.distributedFMS.SubmitEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.distributedFMS.SubmitEventResponse.displayName = 'proto.com.distributedFMS.SubmitEventResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.distributedFMS.AlarmMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.distributedFMS.AlarmMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.distributedFMS.AlarmMessage.displayName = 'proto.com.distributedFMS.AlarmMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.distributedFMS.QueryAlarmsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.distributedFMS.QueryAlarmsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.distributedFMS.QueryAlarmsRequest.displayName = 'proto.com.distributedFMS.QueryAlarmsRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.distributedFMS.SubmitEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.distributedFMS.SubmitEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.SubmitEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.distributedFMS.SubmitEventRequest}
 */
proto.com.distributedFMS.SubmitEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.distributedFMS.SubmitEventRequest;
  return proto.com.distributedFMS.SubmitEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.distributedFMS.SubmitEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.distributedFMS.SubmitEventRequest}
 */
proto.com.distributedFMS.SubmitEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEventTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.distributedFMS.SubmitEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.distributedFMS.SubmitEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.SubmitEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string event_type = 1;
 * @return {string}
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.SubmitEventRequest} returns this
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.SubmitEventRequest} returns this
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 event_time = 3;
 * @return {number}
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.getEventTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.distributedFMS.SubmitEventRequest} returns this
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.setEventTime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.SubmitEventRequest} returns this
 */
proto.com.distributedFMS.SubmitEventRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.distributedFMS.SubmitEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.distributedFMS.SubmitEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.distributedFMS.SubmitEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.SubmitEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.distributedFMS.SubmitEventResponse}
 */
proto.com.distributedFMS.SubmitEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.distributedFMS.SubmitEventResponse;
  return proto.com.distributedFMS.SubmitEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.distributedFMS.SubmitEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.distributedFMS.SubmitEventResponse}
 */
proto.com.distributedFMS.SubmitEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.distributedFMS.SubmitEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.distributedFMS.SubmitEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.distributedFMS.SubmitEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.SubmitEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string event_id = 1;
 * @return {string}
 */
proto.com.distributedFMS.SubmitEventResponse.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.SubmitEventResponse} returns this
 */
proto.com.distributedFMS.SubmitEventResponse.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.distributedFMS.AlarmMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.com.distributedFMS.AlarmMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.distributedFMS.AlarmMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.AlarmMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    alarmId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    deviceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    severity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    geographicRegion: jspb.Message.getFieldWithDefault(msg, 7, ""),
    status: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tallyCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    firstOccurrence: jspb.Message.getFieldWithDefault(msg, 10, 0),
    lastOccurrence: jspb.Message.getFieldWithDefault(msg, 11, 0),
    nodeAlias: jspb.Message.getFieldWithDefault(msg, 12, ""),
    probableCause: jspb.Message.getFieldWithDefault(msg, 13, ""),
    alarmGroup: jspb.Message.getFieldWithDefault(msg, 14, ""),
    summary: jspb.Message.getFieldWithDefault(msg, 15, ""),
    iid: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.distributedFMS.AlarmMessage}
 */
proto.com.distributedFMS.AlarmMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.distributedFMS.AlarmMessage;
  return proto.com.distributedFMS.AlarmMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.distributedFMS.AlarmMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.distributedFMS.AlarmMessage}
 */
proto.com.distributedFMS.AlarmMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlarmId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeverity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeographicRegion(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTallyCount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFirstOccurrence(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastOccurrence(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeAlias(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setProbableCause(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlarmGroup(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setIid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.distributedFMS.AlarmMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.distributedFMS.AlarmMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.distributedFMS.AlarmMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.AlarmMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlarmId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSeverity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGeographicRegion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTallyCount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFirstOccurrence();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getLastOccurrence();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getNodeAlias();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getProbableCause();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAlarmGroup();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getIid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string alarm_id = 1;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getAlarmId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setAlarmId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 timestamp = 2;
 * @return {number}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string device_id = 3;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string severity = 4;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getSeverity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string event_type = 5;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string geographic_region = 7;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getGeographicRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setGeographicRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string status = 8;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 tally_count = 9;
 * @return {number}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getTallyCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setTallyCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 first_occurrence = 10;
 * @return {number}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getFirstOccurrence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setFirstOccurrence = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 last_occurrence = 11;
 * @return {number}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getLastOccurrence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setLastOccurrence = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string node_alias = 12;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getNodeAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setNodeAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string probable_cause = 13;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getProbableCause = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setProbableCause = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string alarm_group = 14;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getAlarmGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setAlarmGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string summary = 15;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string iid = 16;
 * @return {string}
 */
proto.com.distributedFMS.AlarmMessage.prototype.getIid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.AlarmMessage} returns this
 */
proto.com.distributedFMS.AlarmMessage.prototype.setIid = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.distributedFMS.QueryAlarmsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.distributedFMS.QueryAlarmsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.QueryAlarmsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    severity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest}
 */
proto.com.distributedFMS.QueryAlarmsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.distributedFMS.QueryAlarmsRequest;
  return proto.com.distributedFMS.QueryAlarmsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.distributedFMS.QueryAlarmsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest}
 */
proto.com.distributedFMS.QueryAlarmsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeverity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.distributedFMS.QueryAlarmsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.distributedFMS.QueryAlarmsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.distributedFMS.QueryAlarmsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string severity = 1;
 * @return {string}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.getSeverity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest} returns this
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.setSeverity = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest} returns this
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.clearSeverity = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.hasSeverity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string device_id = 2;
 * @return {string}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest} returns this
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.setDeviceId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest} returns this
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.clearDeviceId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.hasDeviceId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string event_type = 3;
 * @return {string}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest} returns this
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.setEventType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.distributedFMS.QueryAlarmsRequest} returns this
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.clearEventType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.distributedFMS.QueryAlarmsRequest.prototype.hasEventType = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.com.distributedFMS);
