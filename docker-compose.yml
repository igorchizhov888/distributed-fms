version: '3.8'

networks:
  fms-net:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    networks:
      - fms-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    networks:
      - fms-net
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  fms-server:
    build:
      context: .
      dockerfile: Dockerfile.fms
      args:
        - APP_VERSION=${APP_VERSION}
    container_name: fms-server
    networks:
      - fms-net
    ports:
      - "50051:50051"
    depends_on:
      - kafka

  trap-receiver:
    build:
      context: .
      dockerfile: Dockerfile.trap
      args:
        - APP_VERSION=${APP_VERSION}
    container_name: trap-receiver
    networks:
      - fms-net
    ports:
      - "10162:10162/udp"
    depends_on:
      - kafka

  envoy:
    build:
      context: .
      dockerfile: Dockerfile.envoy
    container_name: envoy
    networks:
      - fms-net
    ports:
      - "8080:8080"
      - "9901:9901"
    depends_on:
      - fms-server

  fms-ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: fms-ui
    networks:
      - fms-net
    ports:
      - "3000:80"
    depends_on:
      - envoy